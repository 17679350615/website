{"remainingRequest":"D:\\1-4\\second-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\1-4\\second-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\1-4\\second-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\1-4\\second-vue\\src\\views\\Website.vue?vue&type=template&id=0fb971d1&","dependencies":[{"path":"D:\\1-4\\second-vue\\src\\views\\Website.vue","mtime":1622711944441},{"path":"D:\\1-4\\second-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1-4\\second-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\1-4\\second-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1-4\\second-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}