{"remainingRequest":"D:\\1-4\\second-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\1-4\\second-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\1-4\\second-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\1-4\\second-vue\\src\\views\\Student.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\1-4\\second-vue\\src\\views\\Student.vue","mtime":1603107566000},{"path":"D:\\1-4\\second-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1-4\\second-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\1-4\\second-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\1-4\\second-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Student.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div style=\"margin-top:50px;\">\n      <el-input v-model=\"studentName\" placeholder=\"请输入学生姓名\" style=\"width:80%\" clearable></el-input>\n      <el-button type=\"primary\" style=\"margin-left: 10px;\" @click=\"searchStudentByName\">搜索</el-button>\n      <el-button type=\"primary\" style=\"margin-left:10px;margin-bottom: 20px;\" @click=\"showDialog\">新增学生</el-button>\n    </div>\n    <div>\n      <el-table\n              @selection-change=\"handleSelectionChange\"\n              :data=\"students\"\n              border>\n        <el-table-column\n                type=\"selection\"\n                width=\"55\">\n        </el-table-column>\n        <el-table-column\n                prop=\"uid\"\n                label=\"学号\"\n                width=\"180\">\n        </el-table-column>\n        <el-table-column\n                prop=\"name\"\n                label=\"姓名\"\n                width=\"180\">\n        </el-table-column>\n        <el-table-column\n                prop=\"sex\"\n                label=\"性别\"\n                width=\"180\">\n        </el-table-column>\n        <el-table-column\n                prop=\"age\"\n                label=\"年龄\"\n                width=\"180\">\n        </el-table-column>\n        <el-table-column\n                label=\"操作\">\n                align=\"left\">\n          <template slot-scope=\"scope\">\n            <el-button\n                    size=\"mini\"\n                    @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button\n                    size=\"mini\"\n                    type=\"danger\"\n                    @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-button type=\"danger\" size=\"mini\" style=\"margin-top: 12px\" :disabled=\"multipleSelection.length === 0\" @click=\"deleteStudents\">批量删除</el-button>\n    </div>\n    <el-dialog :title=\"dialogTitle[dialogStatus]\" :visible.sync=\"dialogFormVisible\" center>\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"student\">\n        <el-form-item label=\"姓名\" :label-width=\"formLabelWidth\" prop=\"name\">\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" :label-width=\"formLabelWidth\" prop=\"sex\">\n          <el-select v-model=\"form.sex\" placeholder=\"请选择\" style=\"width: 100%\">\n            <el-option\n                    v-for=\"item in options\"\n                    :key=\"item.value\"\n                    :value=\"item.label\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"年龄\" :label-width=\"formLabelWidth\" prop=\"age\">\n          <el-input v-model.number=\"form.age\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitStudent\">确 定</el-button>\n      </div>\n    </el-dialog>\n    <el-upload\n            style=\"margin-top:20px;\"\n            action=\"/upload\"\n            multiple\n            :on-success=\"handleSuccess\"\n            :limit=\"3\"\n            :file-list=\"fileList\">\n      <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n    </el-upload>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\n\nexport default {\n  name: 'Home',\n  components: {\n  },\n  data () {\n    return {\n      fileList: [],\n      studentName: '',\n      multipleSelection:[],\n      dialogTitle: {\n        addStudent: \"新增学生\",\n        editStudent: \"编辑学生\"\n      },\n      dialogStatus: \"\",\n      rules: {\n        name: [\n          { required: true, message: '请输入姓名', trigger: 'blur' }\n        ],\n        sex: [\n          { required: true, message: '请选择性别', trigger: 'change' }\n        ],\n        age: [\n          { required: true, message: '年龄不能为空'},\n          { type: 'number', message: '年龄必须为数字值'}\n        ]\n      },\n      options: [{\n        value: '1',\n        label: '男'\n      }, {\n        value: '2',\n        label: '女'\n      }],\n      msg: '',\n      students:[],\n      search: '',\n      dialogFormVisible: false,\n      form: {\n        name: '',\n        age: '',\n        sex: ''\n      },\n      formLabelWidth: '120px',\n    }\n  },\n  created() {\n    this.findAllStudents();\n  },\n  watch:{\n    studentName () {\n        this.findAllStudents();\n    }\n  },\n  methods: {\n    // deleteFile (file) {\n    //   console.log(file)\n    // },\n    handleSuccess (file) {\n      const filename = file.name;\n      this.$message({\n        message: '文件上传成功！',\n        type: 'success'\n      });\n    },\n    searchStudentByName () {\n        if (this.studentName !== '') {\n            this.$axios.get(\"/student/findStudentByName?name=\"+this.studentName).then( (resp)=> {\n                this.students = resp.data;\n            }).catch( (error)=>{\n                this.$message({\n                    type: 'error',\n                    message: \"查询失败，原因是\"+error.data.message\n                });\n            })\n        }\n    },\n    deleteStudents () {\n      this.$confirm('此操作将永久删除学生, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        let ids = '?';\n        this.multipleSelection.forEach( (item)=>{\n          ids += 'ids='+item.uid+'&'\n        });\n        this.$axios.post(\"/student/deleteStudentsByIds\"+ids).then( (resp)=> {\n          if (resp) {\n            this.findAllStudents();\n            this.$message.success(\"删除成功！\");\n          }\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n      console.log(val)\n    },\n    submitStudent () {\n      if (this.dialogStatus === 'addStudent'){\n        this.addStudent();\n      } else if(this.dialogStatus === \"editStudent\") {\n        this.editStudent();\n      }\n    },\n    findAllStudents () {\n      this.$axios.get(\"/student/findAllStudents\")\n              .then((res) => {\n                this.students = res.data\n              })\n              .catch(error => {\n                this.$message({\n                  type: 'error',\n                  message: \"查询失败，原因是\"+error.data.message\n                });\n              });\n    },\n    handleEdit (row) {\n      this.dialogFormVisible = true;\n      this.dialogStatus = \"editStudent\";\n      this.form.uid = row.uid;\n      this.form.name = row.name;\n      this.form.age = row.age;\n      this.form.sex = row.sex;\n    },\n    handleDelete (row) {\n      this.$confirm('此操作将永久删除该学生, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$axios.post(\"/student/deleteStudent?uid=\"+row.uid).then ((resp)=>{\n          this.$message.success(\"删除成功!\")\n          this.findAllStudents();\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    showDialog () {\n      this.form.uid = '';\n      this.form.name = '';\n      this.form.age = '';\n      this.form.sex = '';\n      this.dialogFormVisible = true;\n      this.dialogStatus = \"addStudent\";\n    },\n    addStudent () {\n      this.$refs.student.validate((valid) => {\n        if (valid) {\n          this.$axios.post(\"/student/addStudent\",this.form).then( (resp)=>{\n            if (resp) {\n              this.dialogFormVisible = false;\n              this.$message.success(\"添加成功！\");\n              this.findAllStudents();\n            }\n          }).catch((error)=>{\n            this.$message({\n              message: '添加数据失败，原因是'+error.data.message,\n              type: 'error'\n            })\n          })\n        } else {\n          this.$message({\n            message: '请输入所有字段',\n            type: 'error'\n          })\n          return false;\n        }\n      });\n    },\n    editStudent () {\n      this.$axios.post(\"/student/updateStudent\",this.form).then( (resp)=>{\n        this.dialogFormVisible = false;\n        this.$message.success(\"修改成功!\");\n        this.findAllStudents();\n      }).catch( (error)=> {\n        this.$message({\n          message: '数据更新失败，原因是'+error.data.message,\n          type: 'error'\n        })\n      })\n    }\n  }\n}\n</script>\n<style scoped>\n  .table {\n    margin: 0 auto;\n    clear: both;\n  }\n</style>\n"],"sourceRoot":"src/views"}]}